---

- include: psycopg2.yml

- name: Create Barman users on PostgreSQL server
  become_user: postgres
  environment:
    PGAPPNAME: ansible
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags }}"
    port: "{{ postgresql_port|default(5432) }}"
  with_items:
    - { name: "{{ barman_superuser_name }}", password: "{{ barman_superuser_password }}", role_attr_flags: "SUPERUSER"   }
    - { name: "{{ barman_streaming_user }}", password: "{{ barman_streaming_password }}", role_attr_flags: "REPLICATION" }

- name: Add rule in pg_hba.conf on primary server to allow streaming replication
  lineinfile:
    dest: "{{ postgresql_config_dir }}/pg_hba.conf"
    line: "host {{ item.database }} {{ item.user }} {{ groups['barman_server'] | map('extract', hostvars, ['ansible_host']) | join(',') }}/32 md5"
  with_items:
    - { database: "postgres",    user: "{{ barman_superuser_name }}" }
    - { database: "replication", user: "{{ barman_streaming_user }}" }
  notify:
    - Reload PostgreSQL

- meta: flush_handlers # Apply pg_hba.conf changes immediately

- block:
    - name: Create .pgpass file entries to connect to PostgreSQL server
      lineinfile:
        dest: "{{ barman_home_directory }}/.pgpass"
        line: "{{ postgresql_host|default(ansible_host) }}:{{ postgresql_port|default(5432) }}:{{ item.database }}:{{ item.user }}:{{ item.password }}"
        owner: "{{ barman_system_user }}"
        group: "{{ barman_system_group }}"
        mode: "0600"
        create: yes
      with_items:
        - { database: "postgres", user: "{{ barman_superuser_name }}", password: "{{ barman_superuser_password }}" }
        - { database: "*",        user: "{{ barman_streaming_user }}", password: "{{ barman_streaming_password }}" }

    - name: Tweak Barman client configuration settings
      template:
        src: client.conf.j2
        dest: "/etc/barman.d/{{ inventory_hostname }}.conf"
        owner: "{{ barman_system_user }}"
        group: "{{ barman_system_group }}"
        mode: "0644"

    - block:
        - name: Check replication slot
          become_user: "{{ barman_system_user }}"
          environment:
            PGAPPNAME: ansible
          command: /usr/lib/postgresql/{{ postgresql_version }}/bin/psql -U {{ barman_superuser_name }} -h {{ postgresql_host|default(ansible_host) }} -p {{ postgresql_port|default(5432) }} postgres -Atc "SELECT CASE WHEN EXISTS(SELECT 1 FROM pg_replication_slots WHERE slot_name = '{{ barman_slot_name }}') THEN 'True' ELSE 'False' END;"
          register: slot_exists
          changed_when: not slot_exists.stdout|bool

        - name: Create replication slot
          become_user: "{{ barman_system_user }}"
          environment:
            PGAPPNAME: ansible
          command: barman receive-wal --create-slot "{{ inventory_hostname }}"
          when: not slot_exists.stdout|bool
      when: barman_streaming_archiver|bool and barman_slot_name != ""
  delegate_to: "{{ groups['barman_server'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"
